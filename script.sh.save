#!/bin/bash

# Set the source and destination folders
SOURCE_FOLDER="/home/ubuntu/Automation_for_Malware_Detection_process/dataset/test"
DESTINATION_FOLDER="/home/ubuntu/Automation_for_Malware_Detection_process/dataset/"
EXISTING_FILE="/home/ubuntu/Automation_for_Malware_Detection_process/dataset/boruta_data.csv"


# Set the Jenkins URL and job name
JENKINS_URL="http://localhost:8080"
JOB_NAME="Andmal-Detection-ML-Pipeline"

# Function to check for new files, compare, and trigger Jenkins pipeline
check_compare_and_trigger() {
    # Check if there are any new files in the source folder
    NEW_FILE=$(ls -t $SOURCE_FOLDER/*.csv 2>/dev/null | head -n1)
    
    if [ -n "$NEW_FILE" ]; then
        echo "New file found: $NEW_FILE"
        
        # Compare new file with existing file
        # if ! cmp -s "$NEW_FILE" "$EXISTING_FILE"; then
            echo "Files are different. Processing..."
            
            # Generate new filename with date
            NEW_FILENAME="data_$(date +%d_%m_%y).csv"
            
            # Rename and move the file
            mv "$NEW_FILE" "$DESTINATION_FOLDER/$NEW_FILENAME"
            
            # Update the existing file reference
            cp "$DESTINATION_FOLDER/$NEW_FILENAME" "$EXISTING_FILE"
            
            # Trigger Jenkins pipeline
            curl -X GET "$JENKINS_URL/job/$JOB_NAME/build?token=123456" --user admin:Automation@123
            
            echo "$(date): New file processed, renamed to $NEW_FILENAME, moved, and Jenkins pipeline triggered."
       # else
            # echo "Files are identical. Deleting new file."
       #    # rm "$NEW_FILE"
       # fi
    else
        echo "$(date): No new files found."
    fi
}

# Main loop
while true; do
    check_compare_and_trigger
    sleep 10
done
